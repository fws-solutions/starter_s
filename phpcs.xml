<?xml version="1.0"?>
<ruleset name="FWS-WP">

	<!-- Arguments -->
	<arg name="tab-width" value="4"/>

	<!-- Base Standard -->
	<rule ref="Inpsyde">
		<!-- <exclude name="Generic.WhiteSpace.DisallowTabIndent"/>  ? -->
		<exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed"/> <!-- ? -->
		<exclude name="WordPress.WP.I18n.MissingTranslatorsComment"/>
		<exclude name="Inpsyde.CodeQuality.PropertyPerClassLimit.TooManyProperties"/>
		<exclude name="WordPress.Security.ValidatedSanitizedInput.MissingUnslash"/>
		<exclude name="Inpsyde.CodeQuality.NoElse"/>
		<exclude name="Squiz.PHP.CommentedOutCode"/>
		<exclude name="PSR1.Methods.CamelCapsMethodName.NotCamelCaps"/>
		<exclude name="Generic.NamingConventions.ConstructorName.OldStyle"/>
		<exclude name="Inpsyde.CodeQuality.NestingLevel.MaxExceeded"/>
		<exclude name="WordPress.Security.NonceVerification"/>
		<exclude name="Inpsyde.CodeQuality.VariablesName.SnakeCaseVar"/>
		<exclude name="PSR1.Methods.CamelCapsMethodName"/>
		<exclude name="Inpsyde.CodeQuality.NoAccessors.NoGetter"/>
		<exclude name="Inpsyde.CodeQuality.NoAccessors.NoSetter"/>
		<exclude name="NeutronStandard.Functions.DisallowCallUserFunc.CallUserFunc"/>
		<exclude name="Inpsyde.CodeQuality.ElementNameMinimalLength.TooShort"/>
		<exclude name="NeutronStandard.AssignAlign.DisallowAssignAlign.Aligned"/>
		<exclude name="NeutronStandard.Whitespace.DisallowMultipleNewlines.MultipleNewlines"/>
		<exclude name="PSR2.Classes.ClassDeclaration.CloseBraceAfterBody" /> <!-- redefined in SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces -->
		<exclude name="PSR2.ControlStructures.SwitchDeclaration"/>
		<exclude name="PSR12.Classes"/>
		<exclude name="PSR12.Files.FileHeader.SpacingAfterBlock"/>
	</rule>

	<rule ref="Generic.Metrics.CyclomaticComplexity">
		<properties>
			<property name="complexity" value="20"/>
		</properties>
	</rule>

	<rule ref="Inpsyde.CodeQuality.LineLength">
		<properties>
			<property name="lineLimit" value="160" />
		</properties>
	</rule>

	<rule ref="Inpsyde.CodeQuality.FunctionLength">
		<type>warning</type>
	</rule>

	<rule ref="Inpsyde.CodeQuality.ForbiddenPublicProperty.Found">
		<type>warning</type>
	</rule>

	<rule ref="Inpsyde.CodeQuality.ElementNameMinimalLength.TooShort">
		<type>warning</type>
		<severity>5</severity>
	</rule>

	<rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
		<type>warning</type>
		<severity>5</severity>
	</rule>

	<rule ref="Inpsyde.CodeQuality.NestingLevel">
		<properties>
			<property name="warningLimit" value="5" />
			<property name="errorLimit" value="10" />
		</properties>
	</rule>

	<!-- Additional rules -->
	<rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="indent" value="4"/>
			<property name="tabIndent" value="false"/>
		</properties>
	</rule>
	<!-- <rule ref="./vendor/drupal/coder/coder_sniffer/Drupal/Sniffs/Classes/UnusedUseStatementSniff.php"/> -->
	<rule ref="Generic.Formatting.SpaceAfterCast"/>
	<rule ref="Generic.CodeAnalysis.EmptyStatement"/>
	<rule ref="Generic.Files.LineEndings"/>
	<rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>

	<rule ref="NormalizedArrays.Arrays.ArrayBraceSpacing"/>
	<rule ref="Universal.Arrays.DuplicateArrayKey"/>
	<rule ref="Universal.Constants.UppercaseMagicConstants"/>
	<rule ref="Universal.ControlStructures.DisallowAlternativeSyntax">
		<properties>
			<property name="allowWithInlineHTML" value="true"/>
		</properties>
	</rule>
	<rule ref="Universal.Namespaces.OneDeclarationPerFile"/>
	<rule ref="Universal.Operators.DisallowLogicalAndOr"/>

	<!-- Rule: This operator is often used lazily instead of doing proper error checking. Its use is highly discouraged. -->
	<rule ref="Generic.PHP.NoSilencedErrors">
		<type>error</type>
	</rule>

	<!-- Rule: The eval() construct is very dangerous, and is impossible to secure. ... these must not be used. -->
	<rule ref="Squiz.PHP.Eval">
		<type>error</type>
	</rule>

	<!-- Rule: Ensure 1 blank line between member vars, but 2 blank lines before the first. -->
	<rule ref="Squiz.WhiteSpace.MemberVarSpacing">
		<properties>
			<property name="spacing" value="1" />
			<property name="spacingBeforeFirst" value="1" />
		</properties>
	</rule>

	<!-- Rule: Checks lines count between different class members, eg. between last property and first method. -->
	<rule ref="SlevomatCodingStandard.Classes.ClassMemberSpacing">
		<properties>
			<property name="linesCountBetweenMembers" value="2" />
		</properties>
	</rule>

	<!-- Rule: Checks that there is a certain number of blank lines between methods. -->
	<rule ref="SlevomatCodingStandard.Classes.MethodSpacing">
		<properties>
			<property name="minLinesCount" value="2" />
			<property name="maxLinesCount" value="2" />
		</properties>
	</rule>

	<!-- Rule: Disallows using loose == and != comparison operators. -->
	<!-- already covered by WordPress.PHP.StrictComparisons.LooseComparison but raising to error level-->
	<rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators">
		<type>error</type>
	</rule>

	<!-- Rule: Checks that there is a certain number of blank lines between properties. -->
	<rule ref="SlevomatCodingStandard.Classes.PropertySpacing">
		<properties>
			<property name="minLinesCountBeforeWithComment" value="1" />
			<property name="maxLinesCountBeforeWithComment" value="1" />
			<property name="minLinesCountBeforeWithoutComment" value="1" />
			<property name="maxLinesCountBeforeWithoutComment" value="1" />
		</properties>
	</rule>

	<!-- Rule: Enforces method signature to be split to more lines so each parameter is on its own line. -->
	<!-- unfortunately this rule count only line length, it would be better to count number of method params -->
	<rule ref="SlevomatCodingStandard.Classes.RequireMultiLineMethodSignature">
		<properties>
			<property name="minLineLength" value="140" />
		</properties>
	</rule>

	<!-- Rule: Enforces configurable number of empty lines after opening and before closing class/interface/trait brace. -->
	<rule ref="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces">
		<properties>
			<property name="linesCountAfterOpeningBrace" value="1" />
			<property name="linesCountBeforeClosingBrace" value="1" />
		</properties>
	</rule>

	<!-- Rule: Enforces configurable number of empty lines in DecBlock. -->
	<rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing">
		<type>warning</type>
		<severity>5</severity>
		<properties>
			<property name="linesCountBeforeFirstContent" value="0" />
			<property name="linesCountBetweenDescriptionAndAnnotations" value="1" />
			<property name="linesCountAfterLastContent" value="0" />
		</properties>
	</rule>

	<!-- Rule: Reports empty comments. -->
	<rule ref="SlevomatCodingStandard.Commenting.EmptyComment">
		<type>warning</type>
		<severity>5</severity>
	</rule>



	<!-- Exclude directories -->
	<exclude-pattern>(index|wp-[a-z\-]+|xmlrpc).php</exclude-pattern>			<!-- skip root WP files -->
	<exclude-pattern>*/wp-content/themes/(?!fws-.*).*</exclude-pattern>		<!-- skip all themes except fws-* -->
	<exclude-pattern>*/wp-admin/*</exclude-pattern>
	<exclude-pattern>*/wp-includes/*</exclude-pattern>
	<exclude-pattern>*/wp-content/plugins/*</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<exclude-pattern>*.css</exclude-pattern>
	<exclude-pattern>*.js</exclude-pattern>
</ruleset>
